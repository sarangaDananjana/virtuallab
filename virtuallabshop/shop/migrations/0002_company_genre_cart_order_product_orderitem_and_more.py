# Generated by Django 5.2.5 on 2025-08-12 13:57

import django.core.validators
import django.db.models.deletion
import shop.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('website', models.URLField(blank=True)),
                ('company_type', models.CharField(choices=[('DEVELOPER', 'Developer'), ('PUBLISHER', 'Publisher'), ('BOTH', 'Developer & Publisher')], default='BOTH', max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=120, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(blank=True, help_text='Anonymous session key', max_length=64, null=True)),
                ('users', models.ManyToManyField(blank=True, related_name='carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest_email', models.EmailField(blank=True, max_length=254)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PAYMENT_INITIATED', 'Payment initiated'), ('PAYMENT_FAILED', 'Payment failed'), ('PAYMENT_SUCCESS', 'Payment success'), ('ORDER_SENT', 'Order sent'), ('ORDER_DELIVERED', 'Order delivered'), ('CANCELLED', 'Cancelled')], default='PAYMENT_INITIATED', max_length=30)),
                ('payment_method', models.CharField(choices=[('CARD', 'Card'), ('BANK_TRANSFER', 'Bank transfer')], default='CARD', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('order_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('notes', models.TextField(blank=True)),
                ('users', models.ManyToManyField(blank=True, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sku', models.CharField(default=shop.models.generate_sku, max_length=32, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('game_size_gb', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('is_dlc', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('developer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='developed_games', to='shop.company')),
                ('dlcs', models.ManyToManyField(blank=True, related_name='base_games', to='shop.product')),
                ('genres', models.ManyToManyField(blank=True, related_name='products', to='shop.genre')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_games', to='shop.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(related_name='orders', through='shop.OrderItem', to='shop.product'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(blank=True, related_name='carts', through='shop.CartItem', to='shop.product'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='products/%Y/%m/%d/')),
                ('alt_text', models.CharField(blank=True, max_length=150)),
                ('is_primary', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product')),
            ],
            options={
                'ordering': ['-is_primary', 'id'],
            },
        ),
        migrations.CreateModel(
            name='SystemRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('min_cpu', models.CharField(max_length=150)),
                ('min_ram_gb', models.PositiveIntegerField()),
                ('min_gpu', models.CharField(max_length=150)),
                ('min_storage_gb', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('min_os', models.CharField(blank=True, max_length=100)),
                ('rec_cpu', models.CharField(blank=True, max_length=150)),
                ('rec_ram_gb', models.PositiveIntegerField(blank=True, null=True)),
                ('rec_gpu', models.CharField(blank=True, max_length=150)),
                ('rec_storage_gb', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('rec_os', models.CharField(blank=True, max_length=100)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='system_requirements', to='shop.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='shop_produc_slug_76971b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('order', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'product')},
        ),
    ]
